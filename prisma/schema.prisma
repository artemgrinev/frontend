// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id                     Int    @id @default(autoincrement())
  url                    String @unique
  title                  String
  description            String
  prepTimeMinutes        Int
  cookTimeMinutes        Int
  preliminaryPreparation String
  servings               Int
  difficulty             String
  image                  String
  caloriesPerServing     Int?
  rating                 Float   @default(0)
  reviewCount            Int     @default(0)
  viewCount              Int     @default(0)
  datePublished          DateTime

  category               RecipeCategory @relation(fields: [categoryId], references: [id])
  categoryId             Int

  cuisine                Cuisine        @relation(fields: [cuisineId], references: [id])
  cuisineId              Int

  ingredients            Ingredient[]
  instructions           Instruction[]
  tags                   RecipeTag[]    @relation("RecipeToRecipeTag")
}

model Ingredient {
  id            Int @id @default(autoincrement())
  title         String
  count         Int
  amount        String

  recipe        Recipe    @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId      Int

  products      Product[] @relation("IngredientToProduct")

  mainProduct   Product?  @relation("MainProductForIngredient", fields: [mainProductId], references: [id])
  mainProductId Int?
}

model Instruction {
  id         Int     @id @default(autoincrement())
  title      String
  image      String? 
  stepNumber Int

  recipe     Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId   Int
}

model Shop {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  url   String
  icon  String

  products Product[]
}

model Product {
  id                   Int     @id @default(autoincrement())
  url                  String
  title                String
  price                Float
  discountPercentage   Float?
  weight               Int?
  amount               String?
  minimumOrderQuantity Float?
  pack                 Boolean  @default(false)
  rating               Float?
  thumbnail            String?

  shopId               Int
  shop                 Shop         @relation(fields: [shopId], references: [id])

  ingredients          Ingredient[] @relation("IngredientToProduct")
  mainIngredientFor    Ingredient[] @relation("MainProductForIngredient")

  similarProducts      Product[]    @relation("SimilarProducts")
  similarTo            Product[]    @relation("SimilarProducts")

  tags                 ProductTag[] @relation("ProductToProductTag")
}


model ProductTag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] @relation("ProductToProductTag")
}

model RecipeTag {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[] @relation("RecipeToRecipeTag")
}

model RecipeCategory {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model Cuisine {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}