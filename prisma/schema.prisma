// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id                     Int      @id @default(autoincrement())
  title                  String
  description            String
  prepTimeMinutes        Int
  cookTimeMinutes        Int
  preliminaryPreparation String
  servings               Int
  difficulty             String
  image                  String
  caloriesPerServing     Int?
  rating                 Float    @default(0)
  reviewCount            Int      @default(0)
  viewCount              Int      @default(0)
  datePublished          DateTime

  category   RecipeCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  cuisine    Cuisine        @relation(fields: [cuisineId], references: [id])
  cuisineId  Int

  ingredients  Ingredient[]
  instructions Instruction[]
  tags         RecipeTag[]  @relation("RecipeToRecipeTag")
}

model Ingredient {
  id       Int     @id @default(autoincrement())
  name     String
  count    String?
  recipe   Recipe  @relation(fields: [recipeId], references: [id])
  recipeId Int
  products  Product[] @relation("IngredientToProduct")
  mainProduct Product? @relation("MainProductForIngredient", fields: [mainProductId], references: [id])
  mainProductId Int?
}

model Instruction {
  id         Int     @id @default(autoincrement())
  title      String
  image      String?
  recipe     Recipe  @relation(fields: [recipeId], references: [id])
  recipeId   Int
  stepNumber Int
}

model Shop {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  url   String?
  icon  String?

  products Product[]
}

model Product {
  id                   Int     @id @default(autoincrement())
  shopId               Int?
  shop                 Shop?   @relation(fields: [shopId], references: [id])
  url                  String?
  title                String
  price                Float
  discountPercentage   Float?
  rating               Float?
  weight               Int?
  amount               String?
  minimumOrderQuantity Float?
  pack                 Boolean  @default(false)
  thumbnail            String?

  ingredients Ingredient[] @relation("IngredientToProduct")
  mainIngredientFor Ingredient[] @relation("MainProductForIngredient")
  similarProducts      Product[] @relation("SimilarProducts")
  similarTo           Product[] @relation("SimilarProducts")
  tags             ProductTag[]    @relation("ProductToProductTag")
}


model ProductTag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] @relation("ProductToProductTag")
}

model RecipeTag {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[] @relation("RecipeToRecipeTag")
}

model RecipeCategory {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model Cuisine {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}